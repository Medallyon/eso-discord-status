name: Publish Latest Release

on:
  release:
    types: [created]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: StatusClient
      Test_Project_Path: your-test-project-path         # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Restore any NuGet dependencies
    - name: Restore NuGet Dependencies
      run: nuget restore
      env:
        Configuration: ${{ matrix.configuration }}

    # Create the app package by building and packaging the Windows Application Packaging project
    - name: Create the app package
      run: msbuild $env:Solution_Name.sln /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Use Copy-Item and Compress-Archive to create a zip
    - name: Create Distribution Package
      env:
        Configuration: ${{ matrix.configuration }}
        Tag: ${{ github.ref_name }}
      run: |
        Remove-Item ".\$env:Solution_Name\bin\$env:Configuration\*" -Include "*.config", "*.pdb", "*.xml", "*.dylib", "*.so" -Recurse -Force
      
        Copy-Item -Path ".\$env:Solution_Name\bin\$env:Configuration\" -Destination ".\dist\DiscordStatus\Client\" -Recurse -Force
        Copy-Item -Path ".\AddOn\*" -Destination ".\dist\DiscordStatus\" -Recurse -Force
        
        $compress = @{
          Path = ".\dist\DiscordStatus"
          CompressionLevel = "Fastest"
          DestinationPath = ".\dist\DiscordStatus-v$env:Tag.zip"
        }
        Compress-Archive @compress

    # Upload compressed package
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: DiscordStatus-v${{ github.ref_name }}
        path: .\dist\*

    # Upload the package zip to the release that triggered this workflow
    - name: Upload Release Zip
      uses: svenstaro/upload-release-action@2.2.1
      with:
        repo_token: ${{ secrets.PAT }}
        file: .\dist\DiscordStatus-v${{ github.ref_name }}.zip
        tag: ${{ github.ref_name }}

    # Upload the package zip to ESOUI
    - name: Push to ESOUI
      uses: M0RGaming/Push-To-EsoUI@v1.5
      env:
        version: ${{ github.ref_name }}
      with:
        EsoUIToken: ${{ secrets.ESOUI_TOKEN }}
        ESOUIID: 2054
        version: ${{ github.ref_name }}
        path: "./Resources/"
        readme: "esoui.md"
        changelog: "changelog.md"
        artifact: "../dist/DiscordStatus-v$env:version.zip"
